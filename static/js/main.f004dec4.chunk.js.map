{"version":3,"sources":["registerServiceWorker.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","components/CounterButton.js","components/Header.js","components/MainPage.js","containers/App.js","actions.js","constants.js","reducers.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","Card","_ref","name","email","id","react_default","a","createElement","className","src","concat","alt","CardList","cardComponent","robots","map","user","i","components_Card","key","SearchBox","searchChange","aria-label","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","hasError","info","setState","Component","CounterButton","updateCount","count","nextProps","nextState","color","onClick","Header","components_CounterButton","MainPage","filteredRobots","filter","robot","toLowerCase","includes","searchField","onRequestRobots","_this$props","onSearchChange","isPending","components_Header","components_SearchBox","components_Scroll","components_ErrorBoundary","components_CardList","App","src_components_MainPage","connect","searchRobots","requestRobots","dispatch","event","payload","target","value","fetch","response","json","data","initialStateSearch","initialStateRobots","rootReducer","combineReducers","arguments","length","undefined","action","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","es","src_containers_App","document","getElementById","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.f004dec4.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nconst Card = ({ name, email, id }) => {\r\n\treturn (\r\n\t\t<div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n\t\t\t<img src={`https://robohash.org/${id}?size=200x200`} alt=\"robots\" />\r\n\t\t\t<div>\r\n\t\t\t\t<h3>{name}</h3>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Card;\r\n\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n\tconst cardComponent = robots.map((user, i) => {\r\n\t\treturn (\r\n\t\t\t<Card \r\n\t\t\t\tkey={i} \r\n\t\t\t\tid={user.id} \r\n\t\t\t\tname={user.name} \r\n\t\t\t\temail={user.email} \r\n\t\t\t/>\r\n\t\t);\r\n\t});\r\n\t\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{cardComponent}\r\n\t\t</div>\r\n\t);\r\n\t\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n\treturn (\r\n\t\t<div className='pa2'>\r\n\t\t\t<input \r\n\t\t\t\taria-label=\"Search Robots\"\r\n\t\t\t\tclassName='pa3 ba b--light-blue bg-lightest-blue' \r\n\t\t\t\ttype=\"search\" \r\n\t\t\t\tplaceholder=\"search robots\" \r\n\t\t\t\tonChange={searchChange} \r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SearchBox;\r\n\r\n","import React from 'react';\r\n\r\nconst Scroll = ( props ) => {\r\n\treturn(\r\n\t\t<div style={{ overflowY: 'scroll', border: '5px solid black', height: '800px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidCatch(error, info) { // same to Try Catch in JS \r\n\t\tthis.setState({ hasError: true })\r\n\t}\r\n\r\n\trender() {\r\n\t\tif(this.state.hasError) {\r\n\t\t\treturn <h1> Oooops. That is not good</h1>\r\n\t\t}\r\n\t\treturn this.props.children\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundary;","import React, { Component } from 'react';\r\n\r\nclass CounterButton extends Component {\r\n\t\tconstructor() {\r\n      super();\r\n      this.state = {\r\n        count: 0\r\n      }\r\n    }\r\n\t\tshouldComponentUpdate(nextProps, nextState) {\r\n      if(this.state.count !== nextState.count){\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n    \r\n    updateCount = () => {\r\n      this.setState( state => {\r\n        return { count: state.count + 1 }\r\n      })\r\n    }\r\n\r\n    render() {\r\n\t\t\treturn (\r\n        <button \r\n          id='counter' \r\n          color={this.props.color} \r\n          onClick={this.updateCount}>\r\n          Count: {this.state.count}\r\n        </button>\r\n      );\r\n    }    \r\n} \r\n\r\nexport default CounterButton;","import React, { Component } from 'react';\r\nimport CounterButton from './CounterButton';\r\n\r\nclass Header extends Component {\r\n\t\t\r\n\t\tshouldComponentUpdate() {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n    render() {\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h1 className='f2'>RoboFriends</h1>\r\n\t\t\t\t\t<CounterButton color={'red'} />\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n    }    \r\n} \r\n\r\nexport default Header;","import React, { Component } from 'react';\r\n\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\nimport Header from '../components/Header';\r\n\r\nimport '../components/MainPage.css';\r\n\r\nclass MainPage extends Component {\r\n\tcomponentDidMount() {\r\n\t\tthis.props.onRequestRobots();\r\n  }\r\n  \r\n  filteredRobots = () => {\r\n    return this.props.robots.filter(robot => {\r\n      return (\r\n      \trobot.name.toLowerCase().includes(this.props.searchField.toLowerCase()) || \r\n      \trobot.email.toLowerCase().includes(this.props.searchField.toLowerCase())\r\n      )\r\n    })\r\n  }\r\n\r\n\trender() {\r\n\t\tconst { onSearchChange, isPending } = this.props;\r\n    // OLD\r\n    // const filteredRobots = robots.filter(robot => {\r\n\t\t// \treturn robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n\t\t// })\r\n\r\n\t\treturn isPending ? //if( robots.length === 0 )\r\n\t\t\t<h1 className='tc f2'>Loading...</h1> :\r\n\t\t\t// console.log('render');\r\n\t\t\t(\r\n\t\t\t\t<div className='tc'>\r\n\t\t\t\t\t<Header />\r\n\t\t\t\t\t<SearchBox searchChange={onSearchChange} />\r\n\t\t\t\t\t<Scroll>\r\n\t\t\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t\t\t{/* OLD => <CardList robots={filteredRobots} /> */}\r\n\t\t\t\t\t\t\t<CardList robots={this.filteredRobots()} />\r\n\t\t\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t\t</Scroll>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t\r\n\t}\r\n}\r\n\r\nexport default MainPage;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setSearchField, requestRobots } from '../actions';\r\n\r\nimport MainPage from '../components/MainPage';\r\nimport './App.css';\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tsearchField: state.searchRobots.searchField,\r\n\t\trobots: state.requestRobots.robots,\r\n\t\tisPending: state.requestRobots.isPending,\r\n\t\terror: state.requestRobots.error\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = () => (dispatch) => {\r\n\treturn{\r\n\t\tonSearchChange: (event) => dispatch(setSearchField(event.target.value)),\r\n\t\tonRequestRobots: () => dispatch(requestRobots())\r\n\t}\r\n}\r\n\r\nclass App extends Component {\r\n\trender() {\r\n\t\treturn <MainPage { ...this.props } /> // Destructuring Object Spread\t\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n\r\n\r\n\r\n\r\n","import { \r\n\tCHANGE_SEARCH_FIELD,\r\n\tREQUEST_ROBOTS_PENDING,\r\n\tREQUEST_ROBOTS_SUCCESS,\r\n\tREQUEST_ROBOTS_FAILED \r\n} from './constants.js'\r\n\r\nexport const setSearchField = (text) => ({\r\n\t// console.log(text);\r\n\t\t\r\n\t\ttype: CHANGE_SEARCH_FIELD,\r\n\t\tpayload: text\r\n\t\r\n})\r\n\r\nexport const requestRobots = () => (dispatch) => {\r\n\tdispatch({ type: REQUEST_ROBOTS_PENDING });\r\n\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(data => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\r\n\t\t\t.catch(error => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error }))\r\n}\r\n\r\n","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\r\n\r\n// 3 REDUX ASYNC ACTIONS\r\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\r\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\r\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';\r\n","import { \r\n\tCHANGE_SEARCH_FIELD,\r\n\tREQUEST_ROBOTS_PENDING,\r\n\tREQUEST_ROBOTS_SUCCESS,\r\n\tREQUEST_ROBOTS_FAILED\r\n} from './constants';\r\n\r\nconst initialStateSearch = {\r\n\tsearchField: ''\r\n}\r\n\r\nexport const searchRobots = (state=initialStateSearch, action={}) => {\r\n\tswitch (action.type) {\r\n\t\tcase CHANGE_SEARCH_FIELD:\r\n\t\t\tconsole.log('CHANGE_SEARCH_FIELD');\r\n\t\t\treturn Object.assign({}, state, { searchField: action.payload });\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nconst initialStateRobots = {\r\n\tisPending: false,\r\n\trobots: []\r\n}\r\n\r\nexport const requestRobots = (state=initialStateRobots, action={}) => {\r\n\tswitch (action.type) {\r\n\t\tcase REQUEST_ROBOTS_PENDING:\r\n\t\t\treturn Object.assign({}, state, { isPending: true })\r\n\t\tcase REQUEST_ROBOTS_SUCCESS:\r\n\t\t\treturn Object.assign({}, state, { robots: action.payload, isPending: false })\t\r\n\t\tcase REQUEST_ROBOTS_FAILED:\r\n\t\t\treturn Object.assign({}, state, { error: action.payload,isPending: false})\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\r\n// import { createLogger } from 'redux-logger';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport './index.css';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport App from './containers/App';\r\nimport { searchRobots, requestRobots } from './reducers';\r\nimport 'tachyons';\r\n\r\n// const logger = createLogger();\r\n\r\nconst rootReducer = combineReducers({ searchRobots, requestRobots })\r\n// const store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger));\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware)); // Test Header not render only one time not to update component when search robots\r\n\r\nReactDOM.render(\r\n\t\t\t\t\t\t\t\t<Provider store={store}>\r\n\t\t\t\t\t\t\t\t\t<App />\r\n\t\t\t\t\t\t\t\t</Provider>\r\n\t\t\t\t\t\t\t\t, document.getElementById('root'));\r\nregisterServiceWorker();\r\n\r\n"],"sourceRoot":""}